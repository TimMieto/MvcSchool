@model MvcSchool.Models.Student

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Student</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StudentId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StudentId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StuFamilyName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StuFamilyName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StuGivenName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StuGivenName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StuGender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StuGender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StuBirth)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StuBirth)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Major.MajorName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MajorName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StuCredit)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StuCredit)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EnrollmentDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EnrollmentDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>

<form style="display:inline;" method="post">
    <input type="hidden" name="id" value="@Model.StudentId" />
    <input type="hidden" name="status" value="@ContactStatus.Approved" />
    <button type="submit" class="btn btn-xs btn-success">Approve</button>
</form>
<form style="display:inline;" method="post">
    <input type="hidden" name="id" value="@Model.StudentId" />
    <input type="hidden" name="status" value="@ContactStatus.Rejected" />
    <button type="submit" class="btn btn-xs btn-success">Reject</button>
</form>

<div>
    <a asp-action="Edit" asp-route-id="@Model.StudentId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>


@*@if (Model.Status != ContactStatus.Approved)
    {
        @if ((await AuthorizationService.AuthorizeAsync(User, Model, ContactOperations.Approve)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.StudentId" />
                <input type="hidden" name="status" value="@ContactStatus.Approved" />
                <button type="submit" class="btn btn-xs btn-success">Approve</button>
            </form>
        }
    }

    @if (Model.Status != ContactStatus.Rejected)
    {
        @if ((await AuthorizationService.AuthorizeAsync(User, Model, ContactOperations.Reject)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.StudentId" />
                <input type="hidden" name="status" value="@ContactStatus.Rejected" />
                <button type="submit" class="btn btn-xs btn-success">Reject</button>
            </form>
        }
    }*@

@*<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, ContactOperations.Update)).Succeeded)
    {
        <a asp-page="Edit" asp-route-id="@Model.StudentId">Edit</a>
        @: |
    }
    <a asp-page="Index">Back to List</a>
</div>*@
